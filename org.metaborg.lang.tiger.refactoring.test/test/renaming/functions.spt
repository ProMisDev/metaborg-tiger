module renaming-functions

language TigerRefactoring


test rename function [[
let 
	function plus(a : int, b:int) : int = (
		a + b
	)
in
   	plus(1,1)
end
]] run rename-test-function to [[
let 
	function add(a : int, b:int) : int = (
		a + b
	)
in
   	add(1,1)
end
]]

test rename procedure [[
let 
	function printnl(x : string) = (
		print(x); 
		print("\n")
	)
in
   	printnl("Hello World")
end
]] run rename-test-procedure to [[
let 
	function printNewLine(x : string) = (
		print(x); 
		print("\n")
	)
in
   	printNewLine("Hello World")
end
]]

test rename argument [[
let 
	function printnl(x : string) = (
		print(x); 
		print("\n")
	)
in
   	printnl("Hello World")
end
]] run rename-test-farg to [[
let 
	function printnl(text : string) = (
		print(text); 
		print("\n")
	)
in
   	printnl("Hello World")
end
]]

test rename argument with capture [[
let 
	function plus(a : int, b:int) : int = (
		a + b;
	  let
			function plus(d:int) : int = 
				a + d
		in 
		 plus(1)
		end
	)
in
   	plus(1,1)
end
]] run rename-test-farg-capture

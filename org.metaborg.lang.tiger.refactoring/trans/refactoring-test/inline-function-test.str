module inline-function-test

imports 
	signatures/-
	nabl2/api
	pp
	libspoofax/stratego/debug
	refactoring/refactoring-util
	refactoring/inline-function
	
rules // rules called by spt
  inline-call-test : ast -> result
    where
     result := <exec-inline-call-test(|"plus")> ast
      
  inline-call-test-no-args : ast -> result
    where
    	result := <exec-inline-call-test(|"zero")> ast
      
  inline-call-test-side-effects : ast -> result
    where
    	result := <exec-inline-call-test(|"square")> ast
      
  inline-call-proc-test : ast -> result
    where
    	result := <exec-inline-call-test(|"printnl")> ast
      
  inline-call-proc-test-no-args : ast -> result
    where
      result := <exec-inline-call-test(|"helloWorld")> ast
      
	inline-function-test : ast -> result
    where
			result := <exce-inline-function-test(fail|"plus")> ast

	inline-procedure-test : ast -> result
    where
      result := <exce-inline-function-test(fail|"printnl")> ast
      
  inline-function-recursion-test: ast -> result
  	where
  		result := <exce-inline-function-test(id|"fact")> ast
      
rules
	exec-inline-call-test(|functionName) : ast -> result
    where
    	analysis := <nabl2-get-ast-analysis> ast;
      <not(nabl2-analysis-has-errors)> analysis
    with
      target-call := <collect-one(get-call-test(|functionName))> ast
      ; (params, body, target-dec-occ) := <exec-get-function(|analysis, target-call)> ast
      ; result := <inline-this-function-call(|target-call, body, params)> ast
      
	exce-inline-function-test(recursion-expected|function-name) : ast -> result
    where
    	analysis := <nabl2-get-ast-analysis> ast;
      <not(nabl2-analysis-has-errors)> analysis
    with
      target-call := <collect-one(get-call-test(|function-name))> ast
      ; (params, body, target-dec-occ) := <exec-get-function(|analysis, target-call)> ast
      ;if recursion-expected
      then 
      	not(check-recursive(|analysis, target-dec-occ, body, params))
      ; result := ast
      else 
      	check-recursive(|analysis, target-dec-occ, body, params) 
      ; inlined-ast := <inline-all-calls(|analysis, target-dec-occ, body, params)> ast  
      ; result := <delete-fun-dec(|target-dec-occ)> inlined-ast 
      end

rules
  get-call-test(|target-name): Call(name, args) -> name
	where
		<eq> (<strip-annos> target-name, <strip-annos> name)
    

 		